apiVersion: apps/v1
kind: StatefulSet
metadata:
  namespace: gic-wesago
  name: postgres
spec:
  selector:
    matchLabels:
      app: postgres
  serviceName: "postgres"
  replicas: 1
  template:
    metadata:
      labels:
        app: postgres
    spec:
      terminationGracePeriodSeconds: 30
      initContainers:
      - name: config
        image: registry.deti/gic-wesago/postgres:v1
        command: [ "bash", "-c" ]
        args:
        - |
          cp /temp-config/pg_hba.conf /config/pg_hba.conf
          cp /temp-config/postgresql.conf /config/postgresql.conf
          cp /temp-config/pg_ident.conf /config/pg_ident.conf

          # add write permissions to write in the /var/log/rsyslog
          chmod 777 /var/log/rsyslog
          echo "log_filename = $(hostname).log" >> /config/postgresql.conf
          
          mkdir -p /data/archive
          chown -R postgres:postgres /data/archive


          if [ "$(hostname)" = "postgres-0" ]; then
            #create archive directory
            echo "host     replication     replicationUser         0.0.0.0/0        trust" >> /config/pg_hba.conf

            # Write the replication settings to the files
            echo "#replication" >> /config/postgresql.conf
            echo "wal_level = replica" >> /config/postgresql.conf
            echo "archive_mode = on" >> /config/postgresql.conf
            echo "archive_command = 'test ! -f /data/archive/%f && cp %p /data/archive/%f'" >> /config/postgresql.conf
            echo "max_wal_senders = 3" >> /config/postgresql.conf
          else
            # Check if /data/pgdata exists, if it exists, remove it
            # if [ -d /data/pgdata ]; then
            #   rm -rf /data/pgdata
            # fi

            # Check if /data/pgdata exists, if it not exists, run the basebackup
            if [ ! -d /data/pgdata ]; then
              pg_basebackup -h postgres-0.postgres.gic-wesago.svc.cluster.local -p 5432 -U replicationUser -D /data/pgdata -Fp -Xs -R
            fi
          fi
        volumeMounts:
        - name: data
          mountPath: /data
          readOnly: false
        - name: config
          mountPath: /config
          readOnly: false
        - name: temp-config
          mountPath: /temp-config
          readOnly: false
        - name: rsyslog-logs
          mountPath: /var/log/rsyslog
          readOnly: false

      containers:
      - name: postgres
        image: registry.deti/gic-wesago/postgres:v1
        args: ["-c", "config_file=/config/postgresql.conf"]
        ports:
        - containerPort: 5432
          name: database
        livenessProbe:
          exec:
            command: ["psql", "-w", "-U", "postgres", "-d", "postgres", "-c", "SELECT 1"]
          initialDelaySeconds: 120     # Time to wait before starting the first probe after the container starts
          periodSeconds: 10           # Time between each probe
          timeoutSeconds: 5           # Time to wait for a probe response
          failureThreshold: 2         # Minimum consecutive failures for the probe to be considered failed
        env:
        - name: PGDATA
          value: "/data/pgdata"
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: POSTGRES_USER
              optional: false
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: POSTGRES_PASSWORD
              optional: false
        - name: POSTGRES_DB
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: POSTGRES_DB
              optional: false
        volumeMounts:
        - name: config
          mountPath: /config
          readOnly: false
        - name: data
          mountPath: /data
          readOnly: false
        - name: rsyslog-logs
          mountPath: /var/log/rsyslog
          readOnly: false

      - name: rsyslog
        image: registry.deti/gic-wesago/rsyslog-server:v1
        imagePullPolicy: Always
        ports:
        - containerPort: 514
          protocol: UDP
        - containerPort: 514
          protocol: TCP
        resources: {}
        volumeMounts:
        - name: rsyslog-config
          mountPath: /etc/rsyslog.conf
          subPath: rsyslog.conf
        - name: rsyslog-logs
          mountPath: /var/log/rsyslog

      volumes:
      - name: config
        emptyDir: {}
      - name: temp-config
        configMap:
          name: postgres
      - name: rsyslog-config
        configMap:
          name: rsyslog-postgres-config
          
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: longhorn
      resources:
        requests:
          storage: 1Gi

  - metadata:
      name: rsyslog-logs
    spec:
      accessModes: ["ReadWriteOnce"]
      storageClassName: longhorn
      resources:
        requests:
          storage: 128Mi
